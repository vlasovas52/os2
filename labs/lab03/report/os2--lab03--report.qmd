---
# Preamble

## Author
author:
  name: Власов Артем Сергеевич
  degrees: 
  orcid: 0000-0002-0877-7063
  email: 1132246841@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Отчет по лабораторной работе 3"
subtitle: "Власов Артем Сергеевич"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Получение навыков настройки базовых и специальных правдоступадля групп пользователей в операционной системетипа Linux.

# Задание

1. Прочитайте справочное описание man по командам chgrp,chmod,getfacl,setfacl.
2. Выполнитедействия по управлению базовыми разрешениями для групп пользователей (раздел 3.3.1).
3. Выполнитедействия по управлению специальными разрешениями для групп пользователей (раздел 3.3.2).
4. Выполните действия по управлению расширенными разрешениями с использованием списков ACLдля групп пользователей (раздел 3.3.3).

# Выполнение лабораторной работы 3.

Заходим в учетную запись root и создаем два новых каталога, даем группам main и third права к соответствующей директории и проверяем коректность.

![Создание каталогов и прав доступа](image/1.png){#fig:001 width=70%}
 
Заходим под учетной записью bob и создаем в каталоге main новый файл, видим, что права доступа к этому файлу есть только у пользователя bob так как он состоит в группе main.

![bob](image/2.png){#fig:002 width=70%}

В каталоге third мы не можем создать файл, так как bob не состоит в группе third. 

Создаем два новых файла через пользователя alice в каталоге main.

![alice new files](image/3.png){#fig:003 width=70%}

Возвращаемся к пользователю bob и пытаемся удалить файлы пользователя alice. Успешно, так как bob имеет полный доступ ко всем файлам директории main.

![Удаление файлов через bob ](image/4.png){#fig:004 width=70%}

Создаем два новых файла уже от пользователя bob.

Задаем новые права доступа для директории из учетной записи root.

![Новые права](image/5.png){#fig:005 width=70%}

Пробуем создать новые файлы через пользователя alice - успешно.
Пробуем удалить файлы созданные учетной записью bob - отказано в доступе.

![Создание](image/6.png){#fig:006 width=70%}

Теперь файлы пользователя bob принадлежат только ему и УЗ root, их удаление другими пользователями невозможно.

![Удаление](image/7.png){#fig:007 width=70%}

Начинаем работу с ACL и задаем новые права доступа нашим директориям.

![ACL](image/8.png){#fig:008 width=70%}

Теперь пользователям группы Third нельзя редактировать файлы каталога main и наоборот.

Создаем новые файлы в наших директориях, видим что они доступны только для чтения.

![Новые файлы](image/9.png){#fig:009 width=70%}

Возвращаем значения ACL по умолчанию и проверяем права доступа. Создаем два новых файла и видим отличия от первых двух. Теперь они доступны полностью толкьто для пользователей соответствующей группы.

![Новые файлы и значения ACL](image/10.png){#fig:010 width=70%}

Через пользователя carol пробуем удалить новые файлы, первый удалить можно, а второй нет, так как carol находится в группе third.

![Проверка заданных прав доступа](image/11.png){#fig:011 width=70%}

Теперь пробуем записать текст в новые файлы через carol. Отказано в доступе, так как у файла стоит щзапрет на редактирование для группы third, редактирование второго успешно.

![Редактирование файлов](image/12.png){#fig:012 width=70%}

![Проверка редактирования](image/13.png){#fig:013 width=70%}

#Контрольные вопросы

1.  Как следует использовать команду chown, чтобы установить владельца группы для файла?
    chown :группа файл

2.  С помощью какой команды можно найти все файлы, принадлежащие конкретному пользователю?
    find / -user имя_пользователя

3.  Как применить разрешения на чтение, запись и выполнение для всех файлов в каталоге /data для пользователей и владельцев групп?
    chmod -R ug=rwX /data (для каталогов) или chmod -R ug+rwx /data (точно для всех)

4.  Какая команда позволяет добавить разрешение на выполнение для файла?
    chmod +x файл

5.  Какая команда гарантирует наследование групповых разрешений для новых файлов?
    chmod g+s каталог

6.  Как разрешить пользователям удалять только свои файлы в каталоге?
    chmod +t каталог (установка sticky bit)

7.  Какая команда добавляет ACL на чтение для группы?
    setfacl -m g:группа:r *

8.  Как гарантировать права на чтение для группы для всех текущих и будущих файлов?
    setfacl -R -m g:группа:rX . и setfacl -R -d -m g:группа:rX .

9.  Какое значение umash нужно установить, чтобы «другие» не получали права?
    umask 007

10. Какая команда гарантирует, что никто не сможет удалить файл myfile?
    chattr +i myfile

# Выводы

Мы получили навыки настройки базовых и специальных прав доступадля групп пользователей в операционной системетипа Linux.


# Список литературы{.unnumbered}

::: {#refs}
:::
